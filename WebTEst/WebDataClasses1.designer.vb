'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.42000
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="al")>  _
Partial Public Class WebDataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertlog_Adm(instance As log_Adm)
    End Sub
  Partial Private Sub Updatelog_Adm(instance As log_Adm)
    End Sub
  Partial Private Sub Deletelog_Adm(instance As log_Adm)
    End Sub
  Partial Private Sub Insertlog_Err(instance As log_Err)
    End Sub
  Partial Private Sub Updatelog_Err(instance As log_Err)
    End Sub
  Partial Private Sub Deletelog_Err(instance As log_Err)
    End Sub
  Partial Private Sub Inserttbl_patients(instance As tbl_patients)
    End Sub
  Partial Private Sub Updatetbl_patients(instance As tbl_patients)
    End Sub
  Partial Private Sub Deletetbl_patients(instance As tbl_patients)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.WebTEst.My.MySettings.Default.alConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property log_Adm() As System.Data.Linq.Table(Of log_Adm)
		Get
			Return Me.GetTable(Of log_Adm)
		End Get
	End Property
	
	Public ReadOnly Property log_Err() As System.Data.Linq.Table(Of log_Err)
		Get
			Return Me.GetTable(Of log_Err)
		End Get
	End Property
	
	Public ReadOnly Property tbl_patients() As System.Data.Linq.Table(Of tbl_patients)
		Get
			Return Me.GetTable(Of tbl_patients)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.log_Adm")>  _
Partial Public Class log_Adm
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _access_id As Long
	
	Private _regdate As Date
	
	Private _application_name As String
	
	Private _machine_name As String
	
	Private _ip_address As String
	
	Private _userid As String
	
	Private _operation_name As String
	
	Private _description As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onaccess_idChanging(value As Long)
    End Sub
    Partial Private Sub Onaccess_idChanged()
    End Sub
    Partial Private Sub OnregdateChanging(value As Date)
    End Sub
    Partial Private Sub OnregdateChanged()
    End Sub
    Partial Private Sub Onapplication_nameChanging(value As String)
    End Sub
    Partial Private Sub Onapplication_nameChanged()
    End Sub
    Partial Private Sub Onmachine_nameChanging(value As String)
    End Sub
    Partial Private Sub Onmachine_nameChanged()
    End Sub
    Partial Private Sub Onip_addressChanging(value As String)
    End Sub
    Partial Private Sub Onip_addressChanged()
    End Sub
    Partial Private Sub OnuseridChanging(value As String)
    End Sub
    Partial Private Sub OnuseridChanged()
    End Sub
    Partial Private Sub Onoperation_nameChanging(value As String)
    End Sub
    Partial Private Sub Onoperation_nameChanged()
    End Sub
    Partial Private Sub OndescriptionChanging(value As String)
    End Sub
    Partial Private Sub OndescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_access_id", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property access_id() As Long
		Get
			Return Me._access_id
		End Get
		Set
			If ((Me._access_id = value)  _
						= false) Then
				Me.Onaccess_idChanging(value)
				Me.SendPropertyChanging
				Me._access_id = value
				Me.SendPropertyChanged("access_id")
				Me.Onaccess_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_regdate", DbType:="DateTime NOT NULL")>  _
	Public Property regdate() As Date
		Get
			Return Me._regdate
		End Get
		Set
			If ((Me._regdate = value)  _
						= false) Then
				Me.OnregdateChanging(value)
				Me.SendPropertyChanging
				Me._regdate = value
				Me.SendPropertyChanged("regdate")
				Me.OnregdateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_application_name", DbType:="NVarChar(50)")>  _
	Public Property application_name() As String
		Get
			Return Me._application_name
		End Get
		Set
			If (String.Equals(Me._application_name, value) = false) Then
				Me.Onapplication_nameChanging(value)
				Me.SendPropertyChanging
				Me._application_name = value
				Me.SendPropertyChanged("application_name")
				Me.Onapplication_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_machine_name", DbType:="NVarChar(50)")>  _
	Public Property machine_name() As String
		Get
			Return Me._machine_name
		End Get
		Set
			If (String.Equals(Me._machine_name, value) = false) Then
				Me.Onmachine_nameChanging(value)
				Me.SendPropertyChanging
				Me._machine_name = value
				Me.SendPropertyChanged("machine_name")
				Me.Onmachine_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ip_address", DbType:="NVarChar(50)")>  _
	Public Property ip_address() As String
		Get
			Return Me._ip_address
		End Get
		Set
			If (String.Equals(Me._ip_address, value) = false) Then
				Me.Onip_addressChanging(value)
				Me.SendPropertyChanging
				Me._ip_address = value
				Me.SendPropertyChanged("ip_address")
				Me.Onip_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property userid() As String
		Get
			Return Me._userid
		End Get
		Set
			If (String.Equals(Me._userid, value) = false) Then
				Me.OnuseridChanging(value)
				Me.SendPropertyChanging
				Me._userid = value
				Me.SendPropertyChanged("userid")
				Me.OnuseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_operation_name", DbType:="NVarChar(50)")>  _
	Public Property operation_name() As String
		Get
			Return Me._operation_name
		End Get
		Set
			If (String.Equals(Me._operation_name, value) = false) Then
				Me.Onoperation_nameChanging(value)
				Me.SendPropertyChanging
				Me._operation_name = value
				Me.SendPropertyChanged("operation_name")
				Me.Onoperation_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_description", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property description() As String
		Get
			Return Me._description
		End Get
		Set
			If (String.Equals(Me._description, value) = false) Then
				Me.OndescriptionChanging(value)
				Me.SendPropertyChanging
				Me._description = value
				Me.SendPropertyChanged("description")
				Me.OndescriptionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.log_Err")>  _
Partial Public Class log_Err
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _error_id As Long
	
	Private _error_date As Date
	
	Private _application_name As String
	
	Private _machine_name As String
	
	Private _ip_address As String
	
	Private _userid As String
	
	Private _error_message As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onerror_idChanging(value As Long)
    End Sub
    Partial Private Sub Onerror_idChanged()
    End Sub
    Partial Private Sub Onerror_dateChanging(value As Date)
    End Sub
    Partial Private Sub Onerror_dateChanged()
    End Sub
    Partial Private Sub Onapplication_nameChanging(value As String)
    End Sub
    Partial Private Sub Onapplication_nameChanged()
    End Sub
    Partial Private Sub Onmachine_nameChanging(value As String)
    End Sub
    Partial Private Sub Onmachine_nameChanged()
    End Sub
    Partial Private Sub Onip_addressChanging(value As String)
    End Sub
    Partial Private Sub Onip_addressChanged()
    End Sub
    Partial Private Sub OnuseridChanging(value As String)
    End Sub
    Partial Private Sub OnuseridChanged()
    End Sub
    Partial Private Sub Onerror_messageChanging(value As String)
    End Sub
    Partial Private Sub Onerror_messageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_error_id", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property error_id() As Long
		Get
			Return Me._error_id
		End Get
		Set
			If ((Me._error_id = value)  _
						= false) Then
				Me.Onerror_idChanging(value)
				Me.SendPropertyChanging
				Me._error_id = value
				Me.SendPropertyChanged("error_id")
				Me.Onerror_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_error_date", DbType:="DateTime NOT NULL")>  _
	Public Property error_date() As Date
		Get
			Return Me._error_date
		End Get
		Set
			If ((Me._error_date = value)  _
						= false) Then
				Me.Onerror_dateChanging(value)
				Me.SendPropertyChanging
				Me._error_date = value
				Me.SendPropertyChanged("error_date")
				Me.Onerror_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_application_name", DbType:="NVarChar(50)")>  _
	Public Property application_name() As String
		Get
			Return Me._application_name
		End Get
		Set
			If (String.Equals(Me._application_name, value) = false) Then
				Me.Onapplication_nameChanging(value)
				Me.SendPropertyChanging
				Me._application_name = value
				Me.SendPropertyChanged("application_name")
				Me.Onapplication_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_machine_name", DbType:="NVarChar(50)")>  _
	Public Property machine_name() As String
		Get
			Return Me._machine_name
		End Get
		Set
			If (String.Equals(Me._machine_name, value) = false) Then
				Me.Onmachine_nameChanging(value)
				Me.SendPropertyChanging
				Me._machine_name = value
				Me.SendPropertyChanged("machine_name")
				Me.Onmachine_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ip_address", DbType:="NVarChar(50)")>  _
	Public Property ip_address() As String
		Get
			Return Me._ip_address
		End Get
		Set
			If (String.Equals(Me._ip_address, value) = false) Then
				Me.Onip_addressChanging(value)
				Me.SendPropertyChanging
				Me._ip_address = value
				Me.SendPropertyChanged("ip_address")
				Me.Onip_addressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property userid() As String
		Get
			Return Me._userid
		End Get
		Set
			If (String.Equals(Me._userid, value) = false) Then
				Me.OnuseridChanging(value)
				Me.SendPropertyChanging
				Me._userid = value
				Me.SendPropertyChanged("userid")
				Me.OnuseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_error_message", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property error_message() As String
		Get
			Return Me._error_message
		End Get
		Set
			If (String.Equals(Me._error_message, value) = false) Then
				Me.Onerror_messageChanging(value)
				Me.SendPropertyChanging
				Me._error_message = value
				Me.SendPropertyChanged("error_message")
				Me.Onerror_messageChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_patients")>  _
Partial Public Class tbl_patients
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _cid As Long
	
	Private _uid As String
	
	Private _cname As String
	
	Private _mf As String
	
	Private _bd As Date
	
	Private _p01 As String
	
	Private _p02 As String
	
	Private _p03 As String
	
	Private _p04 As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OncidChanging(value As Long)
    End Sub
    Partial Private Sub OncidChanged()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OncnameChanging(value As String)
    End Sub
    Partial Private Sub OncnameChanged()
    End Sub
    Partial Private Sub OnmfChanging(value As String)
    End Sub
    Partial Private Sub OnmfChanged()
    End Sub
    Partial Private Sub OnbdChanging(value As Date)
    End Sub
    Partial Private Sub OnbdChanged()
    End Sub
    Partial Private Sub Onp01Changing(value As String)
    End Sub
    Partial Private Sub Onp01Changed()
    End Sub
    Partial Private Sub Onp02Changing(value As String)
    End Sub
    Partial Private Sub Onp02Changed()
    End Sub
    Partial Private Sub Onp03Changing(value As String)
    End Sub
    Partial Private Sub Onp03Changed()
    End Sub
    Partial Private Sub Onp04Changing(value As String)
    End Sub
    Partial Private Sub Onp04Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cid", DbType:="BigInt NOT NULL")>  _
	Public Property cid() As Long
		Get
			Return Me._cid
		End Get
		Set
			If ((Me._cid = value)  _
						= false) Then
				Me.OncidChanging(value)
				Me.SendPropertyChanging
				Me._cid = value
				Me.SendPropertyChanged("cid")
				Me.OncidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cname", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property cname() As String
		Get
			Return Me._cname
		End Get
		Set
			If (String.Equals(Me._cname, value) = false) Then
				Me.OncnameChanging(value)
				Me.SendPropertyChanging
				Me._cname = value
				Me.SendPropertyChanged("cname")
				Me.OncnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_mf", DbType:="NVarChar(2)")>  _
	Public Property mf() As String
		Get
			Return Me._mf
		End Get
		Set
			If (String.Equals(Me._mf, value) = false) Then
				Me.OnmfChanging(value)
				Me.SendPropertyChanging
				Me._mf = value
				Me.SendPropertyChanged("mf")
				Me.OnmfChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_bd", DbType:="Date NOT NULL")>  _
	Public Property bd() As Date
		Get
			Return Me._bd
		End Get
		Set
			If ((Me._bd = value)  _
						= false) Then
				Me.OnbdChanging(value)
				Me.SendPropertyChanging
				Me._bd = value
				Me.SendPropertyChanged("bd")
				Me.OnbdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_p01", DbType:="NVarChar(50)")>  _
	Public Property p01() As String
		Get
			Return Me._p01
		End Get
		Set
			If (String.Equals(Me._p01, value) = false) Then
				Me.Onp01Changing(value)
				Me.SendPropertyChanging
				Me._p01 = value
				Me.SendPropertyChanged("p01")
				Me.Onp01Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_p02", DbType:="NVarChar(50)")>  _
	Public Property p02() As String
		Get
			Return Me._p02
		End Get
		Set
			If (String.Equals(Me._p02, value) = false) Then
				Me.Onp02Changing(value)
				Me.SendPropertyChanging
				Me._p02 = value
				Me.SendPropertyChanged("p02")
				Me.Onp02Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_p03", DbType:="NVarChar(50)")>  _
	Public Property p03() As String
		Get
			Return Me._p03
		End Get
		Set
			If (String.Equals(Me._p03, value) = false) Then
				Me.Onp03Changing(value)
				Me.SendPropertyChanging
				Me._p03 = value
				Me.SendPropertyChanged("p03")
				Me.Onp03Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_p04", DbType:="NVarChar(500)")>  _
	Public Property p04() As String
		Get
			Return Me._p04
		End Get
		Set
			If (String.Equals(Me._p04, value) = false) Then
				Me.Onp04Changing(value)
				Me.SendPropertyChanging
				Me._p04 = value
				Me.SendPropertyChanged("p04")
				Me.Onp04Changed
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
