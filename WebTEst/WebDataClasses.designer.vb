'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.42000
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CL")>  _
Partial Public Class WebDataClassesDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Inserttbl_cloudlab_temp(instance As tbl_cloudlab_temp)
    End Sub
  Partial Private Sub Updatetbl_cloudlab_temp(instance As tbl_cloudlab_temp)
    End Sub
  Partial Private Sub Deletetbl_cloudlab_temp(instance As tbl_cloudlab_temp)
    End Sub
  Partial Private Sub Inserttbl_cloudlab(instance As tbl_cloudlab)
    End Sub
  Partial Private Sub Updatetbl_cloudlab(instance As tbl_cloudlab)
    End Sub
  Partial Private Sub Deletetbl_cloudlab(instance As tbl_cloudlab)
    End Sub
  Partial Private Sub Insertp_source(instance As p_source)
    End Sub
  Partial Private Sub Updatep_source(instance As p_source)
    End Sub
  Partial Private Sub Deletep_source(instance As p_source)
    End Sub
  Partial Private Sub Inserttbl_cloudmed_temp(instance As tbl_cloudmed_temp)
    End Sub
  Partial Private Sub Updatetbl_cloudmed_temp(instance As tbl_cloudmed_temp)
    End Sub
  Partial Private Sub Deletetbl_cloudmed_temp(instance As tbl_cloudmed_temp)
    End Sub
  Partial Private Sub Inserttbl_cloudmed(instance As tbl_cloudmed)
    End Sub
  Partial Private Sub Updatetbl_cloudmed(instance As tbl_cloudmed)
    End Sub
  Partial Private Sub Deletetbl_cloudmed(instance As tbl_cloudmed)
    End Sub
  Partial Private Sub Inserttbl_cloudOP(instance As tbl_cloudOP)
    End Sub
  Partial Private Sub Updatetbl_cloudOP(instance As tbl_cloudOP)
    End Sub
  Partial Private Sub Deletetbl_cloudOP(instance As tbl_cloudOP)
    End Sub
  Partial Private Sub Inserttbl_cloudDIS(instance As tbl_cloudDIS)
    End Sub
  Partial Private Sub Updatetbl_cloudDIS(instance As tbl_cloudDIS)
    End Sub
  Partial Private Sub Deletetbl_cloudDIS(instance As tbl_cloudDIS)
    End Sub
  Partial Private Sub Inserttbl_Query(instance As tbl_Query)
    End Sub
  Partial Private Sub Updatetbl_Query(instance As tbl_Query)
    End Sub
  Partial Private Sub Deletetbl_Query(instance As tbl_Query)
    End Sub
  Partial Private Sub Inserttbl_cloudDEN(instance As tbl_cloudDEN)
    End Sub
  Partial Private Sub Updatetbl_cloudDEN(instance As tbl_cloudDEN)
    End Sub
  Partial Private Sub Deletetbl_cloudDEN(instance As tbl_cloudDEN)
    End Sub
  Partial Private Sub Inserttbl_cloudALL(instance As tbl_cloudALL)
    End Sub
  Partial Private Sub Updatetbl_cloudALL(instance As tbl_cloudALL)
    End Sub
  Partial Private Sub Deletetbl_cloudALL(instance As tbl_cloudALL)
    End Sub
  Partial Private Sub Inserttbl_cloudREH(instance As tbl_cloudREH)
    End Sub
  Partial Private Sub Updatetbl_cloudREH(instance As tbl_cloudREH)
    End Sub
  Partial Private Sub Deletetbl_cloudREH(instance As tbl_cloudREH)
    End Sub
  Partial Private Sub Inserttbl_cloudTCM_D(instance As tbl_cloudTCM_D)
    End Sub
  Partial Private Sub Updatetbl_cloudTCM_D(instance As tbl_cloudTCM_D)
    End Sub
  Partial Private Sub Deletetbl_cloudTCM_D(instance As tbl_cloudTCM_D)
    End Sub
  Partial Private Sub Inserttbl_cloudTCM_G(instance As tbl_cloudTCM_G)
    End Sub
  Partial Private Sub Updatetbl_cloudTCM_G(instance As tbl_cloudTCM_G)
    End Sub
  Partial Private Sub Deletetbl_cloudTCM_G(instance As tbl_cloudTCM_G)
    End Sub
  Partial Private Sub Inserttbl_cloudSCH_U(instance As tbl_cloudSCH_U)
    End Sub
  Partial Private Sub Updatetbl_cloudSCH_U(instance As tbl_cloudSCH_U)
    End Sub
  Partial Private Sub Deletetbl_cloudSCH_U(instance As tbl_cloudSCH_U)
    End Sub
  Partial Private Sub Inserttbl_cloudSCH_R(instance As tbl_cloudSCH_R)
    End Sub
  Partial Private Sub Updatetbl_cloudSCH_R(instance As tbl_cloudSCH_R)
    End Sub
  Partial Private Sub Deletetbl_cloudSCH_R(instance As tbl_cloudSCH_R)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.WebTEst.My.MySettings.Default.CLConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tbl_cloudlab_temp() As System.Data.Linq.Table(Of tbl_cloudlab_temp)
		Get
			Return Me.GetTable(Of tbl_cloudlab_temp)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudlab() As System.Data.Linq.Table(Of tbl_cloudlab)
		Get
			Return Me.GetTable(Of tbl_cloudlab)
		End Get
	End Property
	
	Public ReadOnly Property p_source() As System.Data.Linq.Table(Of p_source)
		Get
			Return Me.GetTable(Of p_source)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudmed_temp() As System.Data.Linq.Table(Of tbl_cloudmed_temp)
		Get
			Return Me.GetTable(Of tbl_cloudmed_temp)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudmed() As System.Data.Linq.Table(Of tbl_cloudmed)
		Get
			Return Me.GetTable(Of tbl_cloudmed)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudOP() As System.Data.Linq.Table(Of tbl_cloudOP)
		Get
			Return Me.GetTable(Of tbl_cloudOP)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudDIS() As System.Data.Linq.Table(Of tbl_cloudDIS)
		Get
			Return Me.GetTable(Of tbl_cloudDIS)
		End Get
	End Property
	
	Public ReadOnly Property tbl_Query() As System.Data.Linq.Table(Of tbl_Query)
		Get
			Return Me.GetTable(Of tbl_Query)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudDEN() As System.Data.Linq.Table(Of tbl_cloudDEN)
		Get
			Return Me.GetTable(Of tbl_cloudDEN)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudALL() As System.Data.Linq.Table(Of tbl_cloudALL)
		Get
			Return Me.GetTable(Of tbl_cloudALL)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudREH() As System.Data.Linq.Table(Of tbl_cloudREH)
		Get
			Return Me.GetTable(Of tbl_cloudREH)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudTCM_D() As System.Data.Linq.Table(Of tbl_cloudTCM_D)
		Get
			Return Me.GetTable(Of tbl_cloudTCM_D)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudTCM_G() As System.Data.Linq.Table(Of tbl_cloudTCM_G)
		Get
			Return Me.GetTable(Of tbl_cloudTCM_G)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudSCH_U() As System.Data.Linq.Table(Of tbl_cloudSCH_U)
		Get
			Return Me.GetTable(Of tbl_cloudSCH_U)
		End Get
	End Property
	
	Public ReadOnly Property tbl_cloudSCH_R() As System.Data.Linq.Table(Of tbl_cloudSCH_R)
		Get
			Return Me.GetTable(Of tbl_cloudSCH_R)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_insert_tbl_cloudmed")>  _
	Public Function sp_insert_tbl_cloudmed(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QDATE", DbType:="DateTime")> ByVal qDATE As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), qDATE)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_insert_tbl_cloudlab")>  _
	Public Function sp_insert_tbl_cloudlab(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QDATE", DbType:="DateTime")> ByVal qDATE As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), qDATE)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_insert_p_cloudmed")>  _
	Public Function sp_insert_p_cloudmed(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QDATE", DbType:="DateTime")> ByVal qDATE As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), qDATE)
		Return CType(result.ReturnValue,Integer)
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.sp_insert_p_cloudlab")>  _
	Public Function sp_insert_p_cloudlab(<Global.System.Data.Linq.Mapping.ParameterAttribute(Name:="QDATE", DbType:="DateTime")> ByVal qDATE As System.Nullable(Of Date)) As Integer
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), qDATE)
		Return CType(result.ReturnValue,Integer)
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudlab_temp")>  _
Partial Public Class tbl_cloudlab_temp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _QDATE As Date
	
	Private _item_n As Short
	
	Private _source As String
	
	Private _dep As String
	
	Private _diagnosis As String
	
	Private _class As String
	
	Private _order_name As String
	
	Private _lab_item As String
	
	Private _result As String
	
	Private _range As String
	
	Private _SDATE As System.Nullable(Of Date)
	
	Private _NHI_code As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    Partial Private Sub Onitem_nChanging(value As Short)
    End Sub
    Partial Private Sub Onitem_nChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndepChanging(value As String)
    End Sub
    Partial Private Sub OndepChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnclassChanging(value As String)
    End Sub
    Partial Private Sub OnclassChanged()
    End Sub
    Partial Private Sub Onorder_nameChanging(value As String)
    End Sub
    Partial Private Sub Onorder_nameChanged()
    End Sub
    Partial Private Sub Onlab_itemChanging(value As String)
    End Sub
    Partial Private Sub Onlab_itemChanged()
    End Sub
    Partial Private Sub OnresultChanging(value As String)
    End Sub
    Partial Private Sub OnresultChanged()
    End Sub
    Partial Private Sub OnrangeChanging(value As String)
    End Sub
    Partial Private Sub OnrangeChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property QDATE() As Date
		Get
			Return Me._QDATE
		End Get
		Set
			If ((Me._QDATE = value)  _
						= false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_item_n", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property item_n() As Short
		Get
			Return Me._item_n
		End Get
		Set
			If ((Me._item_n = value)  _
						= false) Then
				Me.Onitem_nChanging(value)
				Me.SendPropertyChanging
				Me._item_n = value
				Me.SendPropertyChanged("item_n")
				Me.Onitem_nChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(500)")>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dep", DbType:="NVarChar(50)")>  _
	Public Property dep() As String
		Get
			Return Me._dep
		End Get
		Set
			If (String.Equals(Me._dep, value) = false) Then
				Me.OndepChanging(value)
				Me.SendPropertyChanging
				Me._dep = value
				Me.SendPropertyChanged("dep")
				Me.OndepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(500)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="class", Storage:="_class", DbType:="NVarChar(500)")>  _
	Public Property [class]() As String
		Get
			Return Me._class
		End Get
		Set
			If (String.Equals(Me._class, value) = false) Then
				Me.OnclassChanging(value)
				Me.SendPropertyChanging
				Me._class = value
				Me.SendPropertyChanged("[class]")
				Me.OnclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_order_name", DbType:="NVarChar(500)")>  _
	Public Property order_name() As String
		Get
			Return Me._order_name
		End Get
		Set
			If (String.Equals(Me._order_name, value) = false) Then
				Me.Onorder_nameChanging(value)
				Me.SendPropertyChanging
				Me._order_name = value
				Me.SendPropertyChanged("order_name")
				Me.Onorder_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lab_item", DbType:="NVarChar(500)")>  _
	Public Property lab_item() As String
		Get
			Return Me._lab_item
		End Get
		Set
			If (String.Equals(Me._lab_item, value) = false) Then
				Me.Onlab_itemChanging(value)
				Me.SendPropertyChanging
				Me._lab_item = value
				Me.SendPropertyChanged("lab_item")
				Me.Onlab_itemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_result", DbType:="NVarChar(50)")>  _
	Public Property result() As String
		Get
			Return Me._result
		End Get
		Set
			If (String.Equals(Me._result, value) = false) Then
				Me.OnresultChanging(value)
				Me.SendPropertyChanging
				Me._result = value
				Me.SendPropertyChanged("result")
				Me.OnresultChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_range", DbType:="NVarChar(500)")>  _
	Public Property range() As String
		Get
			Return Me._range
		End Get
		Set
			If (String.Equals(Me._range, value) = false) Then
				Me.OnrangeChanging(value)
				Me.SendPropertyChanging
				Me._range = value
				Me.SendPropertyChanged("range")
				Me.OnrangeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date")>  _
	Public Property SDATE() As System.Nullable(Of Date)
		Get
			Return Me._SDATE
		End Get
		Set
			If (Me._SDATE.Equals(value) = false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(50)")>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudlab")>  _
Partial Public Class tbl_cloudlab
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _SDATE As Date
	
	Private _NHI_code As String
	
	Private _lab_item As String
	
	Private _result As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub Onlab_itemChanging(value As String)
    End Sub
    Partial Private Sub Onlab_itemChanged()
    End Sub
    Partial Private Sub OnresultChanging(value As String)
    End Sub
    Partial Private Sub OnresultChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(20) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_lab_item", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property lab_item() As String
		Get
			Return Me._lab_item
		End Get
		Set
			If (String.Equals(Me._lab_item, value) = false) Then
				Me.Onlab_itemChanging(value)
				Me.SendPropertyChanging
				Me._lab_item = value
				Me.SendPropertyChanged("lab_item")
				Me.Onlab_itemChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_result", DbType:="NVarChar(500)")>  _
	Public Property result() As String
		Get
			Return Me._result
		End Get
		Set
			If (String.Equals(Me._result, value) = false) Then
				Me.OnresultChanging(value)
				Me.SendPropertyChanging
				Me._result = value
				Me.SendPropertyChanged("result")
				Me.OnresultChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.p_source")>  _
Partial Public Class p_source
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _source_id As String
	
	Private _class As String
	
	Private _source_name As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub Onsource_idChanging(value As String)
    End Sub
    Partial Private Sub Onsource_idChanged()
    End Sub
    Partial Private Sub OnclassChanging(value As String)
    End Sub
    Partial Private Sub OnclassChanged()
    End Sub
    Partial Private Sub Onsource_nameChanging(value As String)
    End Sub
    Partial Private Sub Onsource_nameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source_id", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source_id() As String
		Get
			Return Me._source_id
		End Get
		Set
			If (String.Equals(Me._source_id, value) = false) Then
				Me.Onsource_idChanging(value)
				Me.SendPropertyChanging
				Me._source_id = value
				Me.SendPropertyChanged("source_id")
				Me.Onsource_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="class", Storage:="_class", DbType:="NVarChar(50)")>  _
	Public Property [class]() As String
		Get
			Return Me._class
		End Get
		Set
			If (String.Equals(Me._class, value) = false) Then
				Me.OnclassChanging(value)
				Me.SendPropertyChanging
				Me._class = value
				Me.SendPropertyChanged("[class]")
				Me.OnclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source_name", DbType:="NVarChar(100)")>  _
	Public Property source_name() As String
		Get
			Return Me._source_name
		End Get
		Set
			If (String.Equals(Me._source_name, value) = false) Then
				Me.Onsource_nameChanging(value)
				Me.SendPropertyChanging
				Me._source_name = value
				Me.SendPropertyChanged("source_name")
				Me.Onsource_nameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudmed_temp")>  _
Partial Public Class tbl_cloudmed_temp
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _QDATE As Date
	
	Private _item_n As Short
	
	Private _source As String
	
	Private _diagnosis As String
	
	Private _atc3 As String
	
	Private _atc5 As String
	
	Private _comp As String
	
	Private _NHI_code As String
	
	Private _drug_name As String
	
	Private _dosing As String
	
	Private _days As String
	
	Private _amt As String
	
	Private _SDATE As System.Nullable(Of Date)
	
	Private _EDATE As System.Nullable(Of Date)
	
	Private _o_source As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    Partial Private Sub Onitem_nChanging(value As Short)
    End Sub
    Partial Private Sub Onitem_nChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub Onatc3Changing(value As String)
    End Sub
    Partial Private Sub Onatc3Changed()
    End Sub
    Partial Private Sub Onatc5Changing(value As String)
    End Sub
    Partial Private Sub Onatc5Changed()
    End Sub
    Partial Private Sub OncompChanging(value As String)
    End Sub
    Partial Private Sub OncompChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub Ondrug_nameChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_nameChanged()
    End Sub
    Partial Private Sub OndosingChanging(value As String)
    End Sub
    Partial Private Sub OndosingChanged()
    End Sub
    Partial Private Sub OndaysChanging(value As String)
    End Sub
    Partial Private Sub OndaysChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As String)
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub Ono_sourceChanging(value As String)
    End Sub
    Partial Private Sub Ono_sourceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property QDATE() As Date
		Get
			Return Me._QDATE
		End Get
		Set
			If ((Me._QDATE = value)  _
						= false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_item_n", DbType:="SmallInt NOT NULL", IsPrimaryKey:=true)>  _
	Public Property item_n() As Short
		Get
			Return Me._item_n
		End Get
		Set
			If ((Me._item_n = value)  _
						= false) Then
				Me.Onitem_nChanging(value)
				Me.SendPropertyChanging
				Me._item_n = value
				Me.SendPropertyChanged("item_n")
				Me.Onitem_nChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(500)")>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(500)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atc3", DbType:="NVarChar(500)")>  _
	Public Property atc3() As String
		Get
			Return Me._atc3
		End Get
		Set
			If (String.Equals(Me._atc3, value) = false) Then
				Me.Onatc3Changing(value)
				Me.SendPropertyChanging
				Me._atc3 = value
				Me.SendPropertyChanged("atc3")
				Me.Onatc3Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_atc5", DbType:="NVarChar(500)")>  _
	Public Property atc5() As String
		Get
			Return Me._atc5
		End Get
		Set
			If (String.Equals(Me._atc5, value) = false) Then
				Me.Onatc5Changing(value)
				Me.SendPropertyChanging
				Me._atc5 = value
				Me.SendPropertyChanged("atc5")
				Me.Onatc5Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_comp", DbType:="NVarChar(500)")>  _
	Public Property comp() As String
		Get
			Return Me._comp
		End Get
		Set
			If (String.Equals(Me._comp, value) = false) Then
				Me.OncompChanging(value)
				Me.SendPropertyChanging
				Me._comp = value
				Me.SendPropertyChanged("comp")
				Me.OncompChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(50)")>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_name", DbType:="NVarChar(500)")>  _
	Public Property drug_name() As String
		Get
			Return Me._drug_name
		End Get
		Set
			If (String.Equals(Me._drug_name, value) = false) Then
				Me.Ondrug_nameChanging(value)
				Me.SendPropertyChanging
				Me._drug_name = value
				Me.SendPropertyChanged("drug_name")
				Me.Ondrug_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dosing", DbType:="NVarChar(50)")>  _
	Public Property dosing() As String
		Get
			Return Me._dosing
		End Get
		Set
			If (String.Equals(Me._dosing, value) = false) Then
				Me.OndosingChanging(value)
				Me.SendPropertyChanging
				Me._dosing = value
				Me.SendPropertyChanged("dosing")
				Me.OndosingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_days", DbType:="NVarChar(50)")>  _
	Public Property days() As String
		Get
			Return Me._days
		End Get
		Set
			If (String.Equals(Me._days, value) = false) Then
				Me.OndaysChanging(value)
				Me.SendPropertyChanging
				Me._days = value
				Me.SendPropertyChanged("days")
				Me.OndaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="NVarChar(50)")>  _
	Public Property amt() As String
		Get
			Return Me._amt
		End Get
		Set
			If (String.Equals(Me._amt, value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date")>  _
	Public Property SDATE() As System.Nullable(Of Date)
		Get
			Return Me._SDATE
		End Get
		Set
			If (Me._SDATE.Equals(value) = false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date")>  _
	Public Property EDATE() As System.Nullable(Of Date)
		Get
			Return Me._EDATE
		End Get
		Set
			If (Me._EDATE.Equals(value) = false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_o_source", DbType:="NVarChar(50)")>  _
	Public Property o_source() As String
		Get
			Return Me._o_source
		End Get
		Set
			If (String.Equals(Me._o_source, value) = false) Then
				Me.Ono_sourceChanging(value)
				Me.SendPropertyChanging
				Me._o_source = value
				Me.SendPropertyChanged("o_source")
				Me.Ono_sourceChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudmed")>  _
Partial Public Class tbl_cloudmed
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _diagnosis As String
	
	Private _NHI_code As String
	
	Private _dosing As String
	
	Private _days As String
	
	Private _amt As String
	
	Private _SDATE As Date
	
	Private _EDATE As System.Nullable(Of Date)
	
	Private _o_source As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub OndosingChanging(value As String)
    End Sub
    Partial Private Sub OndosingChanged()
    End Sub
    Partial Private Sub OndaysChanging(value As String)
    End Sub
    Partial Private Sub OndaysChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As String)
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub Ono_sourceChanging(value As String)
    End Sub
    Partial Private Sub Ono_sourceChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(500)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dosing", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property dosing() As String
		Get
			Return Me._dosing
		End Get
		Set
			If (String.Equals(Me._dosing, value) = false) Then
				Me.OndosingChanging(value)
				Me.SendPropertyChanging
				Me._dosing = value
				Me.SendPropertyChanged("dosing")
				Me.OndosingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_days", DbType:="NVarChar(50)")>  _
	Public Property days() As String
		Get
			Return Me._days
		End Get
		Set
			If (String.Equals(Me._days, value) = false) Then
				Me.OndaysChanging(value)
				Me.SendPropertyChanging
				Me._days = value
				Me.SendPropertyChanged("days")
				Me.OndaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="NVarChar(50)")>  _
	Public Property amt() As String
		Get
			Return Me._amt
		End Get
		Set
			If (String.Equals(Me._amt, value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date")>  _
	Public Property EDATE() As System.Nullable(Of Date)
		Get
			Return Me._EDATE
		End Get
		Set
			If (Me._EDATE.Equals(value) = false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_o_source", DbType:="NVarChar(50)")>  _
	Public Property o_source() As String
		Get
			Return Me._o_source
		End Get
		Set
			If (String.Equals(Me._o_source, value) = false) Then
				Me.Ono_sourceChanging(value)
				Me.SendPropertyChanging
				Me._o_source = value
				Me.SendPropertyChanged("o_source")
				Me.Ono_sourceChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudOP")>  _
Partial Public Class tbl_cloudOP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _dep As String
	
	Private _diagnosis As String
	
	Private _NHI_code As String
	
	Private _op_name As String
	
	Private _loca As String
	
	Private _SDATE As Date
	
	Private _EDATE As Date
	
	Private _amt As System.Nullable(Of Byte)
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndepChanging(value As String)
    End Sub
    Partial Private Sub OndepChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub Onop_nameChanging(value As String)
    End Sub
    Partial Private Sub Onop_nameChanged()
    End Sub
    Partial Private Sub OnlocaChanging(value As String)
    End Sub
    Partial Private Sub OnlocaChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10)")>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dep", DbType:="NVarChar(50)")>  _
	Public Property dep() As String
		Get
			Return Me._dep
		End Get
		Set
			If (String.Equals(Me._dep, value) = false) Then
				Me.OndepChanging(value)
				Me.SendPropertyChanging
				Me._dep = value
				Me.SendPropertyChanged("dep")
				Me.OndepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(50)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_op_name", DbType:="NVarChar(100)")>  _
	Public Property op_name() As String
		Get
			Return Me._op_name
		End Get
		Set
			If (String.Equals(Me._op_name, value) = false) Then
				Me.Onop_nameChanging(value)
				Me.SendPropertyChanging
				Me._op_name = value
				Me.SendPropertyChanged("op_name")
				Me.Onop_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loca", DbType:="NVarChar(50)")>  _
	Public Property loca() As String
		Get
			Return Me._loca
		End Get
		Set
			If (String.Equals(Me._loca, value) = false) Then
				Me.OnlocaChanging(value)
				Me.SendPropertyChanging
				Me._loca = value
				Me.SendPropertyChanged("loca")
				Me.OnlocaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EDATE() As Date
		Get
			Return Me._EDATE
		End Get
		Set
			If ((Me._EDATE = value)  _
						= false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="TinyInt")>  _
	Public Property amt() As System.Nullable(Of Byte)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudDIS")>  _
Partial Public Class tbl_cloudDIS
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _dep As String
	
	Private _diagnosis As String
	
	Private _SDATE As Date
	
	Private _EDATE As Date
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndepChanging(value As String)
    End Sub
    Partial Private Sub OndepChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dep", DbType:="NVarChar(50)")>  _
	Public Property dep() As String
		Get
			Return Me._dep
		End Get
		Set
			If (String.Equals(Me._dep, value) = false) Then
				Me.OndepChanging(value)
				Me.SendPropertyChanging
				Me._dep = value
				Me.SendPropertyChanged("dep")
				Me.OndepChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(50)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EDATE() As Date
		Get
			Return Me._EDATE
		End Get
		Set
			If ((Me._EDATE = value)  _
						= false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_Query")>  _
Partial Public Class tbl_Query
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Query_id As Long
	
	Private _uid As String
	
	Private _QDATE As System.Nullable(Of Date)
	
	Private _if_cloudmed As System.Nullable(Of Boolean)
	
	Private _if_schedule As System.Nullable(Of Boolean)
	
	Private _if_cloudlab As System.Nullable(Of Boolean)
	
	Private _OP As System.Nullable(Of Boolean)
	
	Private _discharge As System.Nullable(Of Boolean)
	
	Private _rehab As System.Nullable(Of Boolean)
	
	Private _if_TCM As System.Nullable(Of Boolean)
	
	Private _if_dental As System.Nullable(Of Boolean)
	
	Private _if_allergy As System.Nullable(Of Boolean)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnQuery_idChanging(value As Long)
    End Sub
    Partial Private Sub OnQuery_idChanged()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    Partial Private Sub Onif_cloudmedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_cloudmedChanged()
    End Sub
    Partial Private Sub Onif_scheduleChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_scheduleChanged()
    End Sub
    Partial Private Sub Onif_cloudlabChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_cloudlabChanged()
    End Sub
    Partial Private Sub OnOPChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnOPChanged()
    End Sub
    Partial Private Sub OndischargeChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OndischargeChanged()
    End Sub
    Partial Private Sub OnrehabChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnrehabChanged()
    End Sub
    Partial Private Sub Onif_TCMChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_TCMChanged()
    End Sub
    Partial Private Sub Onif_dentalChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_dentalChanged()
    End Sub
    Partial Private Sub Onif_allergyChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub Onif_allergyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Query_id", AutoSync:=AutoSync.OnInsert, DbType:="BigInt NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Query_id() As Long
		Get
			Return Me._Query_id
		End Get
		Set
			If ((Me._Query_id = value)  _
						= false) Then
				Me.OnQuery_idChanging(value)
				Me.SendPropertyChanging
				Me._Query_id = value
				Me.SendPropertyChanged("Query_id")
				Me.OnQuery_idChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(20)")>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_cloudmed", DbType:="Bit")>  _
	Public Property if_cloudmed() As System.Nullable(Of Boolean)
		Get
			Return Me._if_cloudmed
		End Get
		Set
			If (Me._if_cloudmed.Equals(value) = false) Then
				Me.Onif_cloudmedChanging(value)
				Me.SendPropertyChanging
				Me._if_cloudmed = value
				Me.SendPropertyChanged("if_cloudmed")
				Me.Onif_cloudmedChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_schedule", DbType:="Bit")>  _
	Public Property if_schedule() As System.Nullable(Of Boolean)
		Get
			Return Me._if_schedule
		End Get
		Set
			If (Me._if_schedule.Equals(value) = false) Then
				Me.Onif_scheduleChanging(value)
				Me.SendPropertyChanging
				Me._if_schedule = value
				Me.SendPropertyChanged("if_schedule")
				Me.Onif_scheduleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_cloudlab", DbType:="Bit")>  _
	Public Property if_cloudlab() As System.Nullable(Of Boolean)
		Get
			Return Me._if_cloudlab
		End Get
		Set
			If (Me._if_cloudlab.Equals(value) = false) Then
				Me.Onif_cloudlabChanging(value)
				Me.SendPropertyChanging
				Me._if_cloudlab = value
				Me.SendPropertyChanged("if_cloudlab")
				Me.Onif_cloudlabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_OP", DbType:="Bit")>  _
	Public Property OP() As System.Nullable(Of Boolean)
		Get
			Return Me._OP
		End Get
		Set
			If (Me._OP.Equals(value) = false) Then
				Me.OnOPChanging(value)
				Me.SendPropertyChanging
				Me._OP = value
				Me.SendPropertyChanged("OP")
				Me.OnOPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_discharge", DbType:="Bit")>  _
	Public Property discharge() As System.Nullable(Of Boolean)
		Get
			Return Me._discharge
		End Get
		Set
			If (Me._discharge.Equals(value) = false) Then
				Me.OndischargeChanging(value)
				Me.SendPropertyChanging
				Me._discharge = value
				Me.SendPropertyChanged("discharge")
				Me.OndischargeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_rehab", DbType:="Bit")>  _
	Public Property rehab() As System.Nullable(Of Boolean)
		Get
			Return Me._rehab
		End Get
		Set
			If (Me._rehab.Equals(value) = false) Then
				Me.OnrehabChanging(value)
				Me.SendPropertyChanging
				Me._rehab = value
				Me.SendPropertyChanged("rehab")
				Me.OnrehabChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_TCM", DbType:="Bit")>  _
	Public Property if_TCM() As System.Nullable(Of Boolean)
		Get
			Return Me._if_TCM
		End Get
		Set
			If (Me._if_TCM.Equals(value) = false) Then
				Me.Onif_TCMChanging(value)
				Me.SendPropertyChanging
				Me._if_TCM = value
				Me.SendPropertyChanged("if_TCM")
				Me.Onif_TCMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_dental", DbType:="Bit")>  _
	Public Property if_dental() As System.Nullable(Of Boolean)
		Get
			Return Me._if_dental
		End Get
		Set
			If (Me._if_dental.Equals(value) = false) Then
				Me.Onif_dentalChanging(value)
				Me.SendPropertyChanging
				Me._if_dental = value
				Me.SendPropertyChanged("if_dental")
				Me.Onif_dentalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_if_allergy", DbType:="Bit")>  _
	Public Property if_allergy() As System.Nullable(Of Boolean)
		Get
			Return Me._if_allergy
		End Get
		Set
			If (Me._if_allergy.Equals(value) = false) Then
				Me.Onif_allergyChanging(value)
				Me.SendPropertyChanging
				Me._if_allergy = value
				Me.SendPropertyChanged("if_allergy")
				Me.Onif_allergyChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudDEN")>  _
Partial Public Class tbl_cloudDEN
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _diagnosis As String
	
	Private _NHI_code As String
	
	Private _op_name As String
	
	Private _loca As String
	
	Private _SDATE As Date
	
	Private _EDATE As Date
	
	Private _amt As System.Nullable(Of Byte)
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub Onop_nameChanging(value As String)
    End Sub
    Partial Private Sub Onop_nameChanged()
    End Sub
    Partial Private Sub OnlocaChanging(value As String)
    End Sub
    Partial Private Sub OnlocaChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(50)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_op_name", DbType:="NVarChar(100)")>  _
	Public Property op_name() As String
		Get
			Return Me._op_name
		End Get
		Set
			If (String.Equals(Me._op_name, value) = false) Then
				Me.Onop_nameChanging(value)
				Me.SendPropertyChanging
				Me._op_name = value
				Me.SendPropertyChanged("op_name")
				Me.Onop_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loca", DbType:="NVarChar(50)")>  _
	Public Property loca() As String
		Get
			Return Me._loca
		End Get
		Set
			If (String.Equals(Me._loca, value) = false) Then
				Me.OnlocaChanging(value)
				Me.SendPropertyChanging
				Me._loca = value
				Me.SendPropertyChanged("loca")
				Me.OnlocaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EDATE() As Date
		Get
			Return Me._EDATE
		End Get
		Set
			If ((Me._EDATE = value)  _
						= false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="TinyInt")>  _
	Public Property amt() As System.Nullable(Of Byte)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="Date")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudALL")>  _
Partial Public Class tbl_cloudALL
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _SDATE As Date
	
	Private _source As String
	
	Private _remark As String
	
	Private _drug_name As String
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OnremarkChanging(value As String)
    End Sub
    Partial Private Sub OnremarkChanged()
    End Sub
    Partial Private Sub Ondrug_nameChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_nameChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remark", DbType:="NVarChar(50)")>  _
	Public Property remark() As String
		Get
			Return Me._remark
		End Get
		Set
			If (String.Equals(Me._remark, value) = false) Then
				Me.OnremarkChanging(value)
				Me.SendPropertyChanging
				Me._remark = value
				Me.SendPropertyChanged("remark")
				Me.OnremarkChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property drug_name() As String
		Get
			Return Me._drug_name
		End Get
		Set
			If (String.Equals(Me._drug_name, value) = false) Then
				Me.Ondrug_nameChanging(value)
				Me.SendPropertyChanging
				Me._drug_name = value
				Me.SendPropertyChanged("drug_name")
				Me.Ondrug_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudREH")>  _
Partial Public Class tbl_cloudREH
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _class As String
	
	Private _source As String
	
	Private _diagnosis As String
	
	Private _type As String
	
	Private _curegrade As String
	
	Private _amt As System.Nullable(Of Byte)
	
	Private _begin_date As System.Nullable(Of Date)
	
	Private _end_date As System.Nullable(Of Date)
	
	Private _loca As String
	
	Private _SDATE As Date
	
	Private _EDATE As Date
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnclassChanging(value As String)
    End Sub
    Partial Private Sub OnclassChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OncuregradeChanging(value As String)
    End Sub
    Partial Private Sub OncuregradeChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub Onbegin_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onbegin_dateChanged()
    End Sub
    Partial Private Sub Onend_dateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onend_dateChanged()
    End Sub
    Partial Private Sub OnlocaChanging(value As String)
    End Sub
    Partial Private Sub OnlocaChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="class", Storage:="_class", DbType:="NVarChar(50)")>  _
	Public Property [class]() As String
		Get
			Return Me._class
		End Get
		Set
			If (String.Equals(Me._class, value) = false) Then
				Me.OnclassChanging(value)
				Me.SendPropertyChanging
				Me._class = value
				Me.SendPropertyChanged("[class]")
				Me.OnclassChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(10)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_curegrade", DbType:="NVarChar(50)")>  _
	Public Property curegrade() As String
		Get
			Return Me._curegrade
		End Get
		Set
			If (String.Equals(Me._curegrade, value) = false) Then
				Me.OncuregradeChanging(value)
				Me.SendPropertyChanging
				Me._curegrade = value
				Me.SendPropertyChanged("curegrade")
				Me.OncuregradeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="TinyInt")>  _
	Public Property amt() As System.Nullable(Of Byte)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_begin_date", DbType:="Date")>  _
	Public Property begin_date() As System.Nullable(Of Date)
		Get
			Return Me._begin_date
		End Get
		Set
			If (Me._begin_date.Equals(value) = false) Then
				Me.Onbegin_dateChanging(value)
				Me.SendPropertyChanging
				Me._begin_date = value
				Me.SendPropertyChanged("begin_date")
				Me.Onbegin_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_end_date", DbType:="Date")>  _
	Public Property end_date() As System.Nullable(Of Date)
		Get
			Return Me._end_date
		End Get
		Set
			If (Me._end_date.Equals(value) = false) Then
				Me.Onend_dateChanging(value)
				Me.SendPropertyChanging
				Me._end_date = value
				Me.SendPropertyChanged("end_date")
				Me.Onend_dateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_loca", DbType:="NVarChar(50)")>  _
	Public Property loca() As String
		Get
			Return Me._loca
		End Get
		Set
			If (String.Equals(Me._loca, value) = false) Then
				Me.OnlocaChanging(value)
				Me.SendPropertyChanging
				Me._loca = value
				Me.SendPropertyChanged("loca")
				Me.OnlocaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property EDATE() As Date
		Get
			Return Me._EDATE
		End Get
		Set
			If ((Me._EDATE = value)  _
						= false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudTCM_D")>  _
Partial Public Class tbl_cloudTCM_D
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _diagnosis As String
	
	Private _NHI_code As String
	
	Private _complex As String
	
	Private _base As String
	
	Private _effect As String
	
	Private _dosing As String
	
	Private _days As System.Nullable(Of Byte)
	
	Private _type As String
	
	Private _amt As System.Nullable(Of Short)
	
	Private _SDATE As Date
	
	Private _EDATE As System.Nullable(Of Date)
	
	Private _serial As String
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OnNHI_codeChanging(value As String)
    End Sub
    Partial Private Sub OnNHI_codeChanged()
    End Sub
    Partial Private Sub OncomplexChanging(value As String)
    End Sub
    Partial Private Sub OncomplexChanged()
    End Sub
    Partial Private Sub OnbaseChanging(value As String)
    End Sub
    Partial Private Sub OnbaseChanged()
    End Sub
    Partial Private Sub OneffectChanging(value As String)
    End Sub
    Partial Private Sub OneffectChanged()
    End Sub
    Partial Private Sub OndosingChanging(value As String)
    End Sub
    Partial Private Sub OndosingChanged()
    End Sub
    Partial Private Sub OndaysChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OndaysChanged()
    End Sub
    Partial Private Sub OntypeChanging(value As String)
    End Sub
    Partial Private Sub OntypeChanged()
    End Sub
    Partial Private Sub OnamtChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub OnamtChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnserialChanging(value As String)
    End Sub
    Partial Private Sub OnserialChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(50)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NHI_code", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property NHI_code() As String
		Get
			Return Me._NHI_code
		End Get
		Set
			If (String.Equals(Me._NHI_code, value) = false) Then
				Me.OnNHI_codeChanging(value)
				Me.SendPropertyChanging
				Me._NHI_code = value
				Me.SendPropertyChanged("NHI_code")
				Me.OnNHI_codeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_complex", DbType:="NVarChar(5)")>  _
	Public Property complex() As String
		Get
			Return Me._complex
		End Get
		Set
			If (String.Equals(Me._complex, value) = false) Then
				Me.OncomplexChanging(value)
				Me.SendPropertyChanging
				Me._complex = value
				Me.SendPropertyChanged("complex")
				Me.OncomplexChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_base", DbType:="NVarChar(50)")>  _
	Public Property base() As String
		Get
			Return Me._base
		End Get
		Set
			If (String.Equals(Me._base, value) = false) Then
				Me.OnbaseChanging(value)
				Me.SendPropertyChanging
				Me._base = value
				Me.SendPropertyChanged("base")
				Me.OnbaseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_effect", DbType:="NVarChar(50)")>  _
	Public Property effect() As String
		Get
			Return Me._effect
		End Get
		Set
			If (String.Equals(Me._effect, value) = false) Then
				Me.OneffectChanging(value)
				Me.SendPropertyChanging
				Me._effect = value
				Me.SendPropertyChanged("effect")
				Me.OneffectChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dosing", DbType:="NVarChar(50)")>  _
	Public Property dosing() As String
		Get
			Return Me._dosing
		End Get
		Set
			If (String.Equals(Me._dosing, value) = false) Then
				Me.OndosingChanging(value)
				Me.SendPropertyChanging
				Me._dosing = value
				Me.SendPropertyChanged("dosing")
				Me.OndosingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_days", DbType:="TinyInt")>  _
	Public Property days() As System.Nullable(Of Byte)
		Get
			Return Me._days
		End Get
		Set
			If (Me._days.Equals(value) = false) Then
				Me.OndaysChanging(value)
				Me.SendPropertyChanging
				Me._days = value
				Me.SendPropertyChanged("days")
				Me.OndaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_type", DbType:="NVarChar(50)")>  _
	Public Property type() As String
		Get
			Return Me._type
		End Get
		Set
			If (String.Equals(Me._type, value) = false) Then
				Me.OntypeChanging(value)
				Me.SendPropertyChanging
				Me._type = value
				Me.SendPropertyChanged("type")
				Me.OntypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_amt", DbType:="SmallInt")>  _
	Public Property amt() As System.Nullable(Of Short)
		Get
			Return Me._amt
		End Get
		Set
			If (Me._amt.Equals(value) = false) Then
				Me.OnamtChanging(value)
				Me.SendPropertyChanging
				Me._amt = value
				Me.SendPropertyChanged("amt")
				Me.OnamtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date")>  _
	Public Property EDATE() As System.Nullable(Of Date)
		Get
			Return Me._EDATE
		End Get
		Set
			If (Me._EDATE.Equals(value) = false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_serial", DbType:="NVarChar(4) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property serial() As String
		Get
			Return Me._serial
		End Get
		Set
			If (String.Equals(Me._serial, value) = false) Then
				Me.OnserialChanging(value)
				Me.SendPropertyChanging
				Me._serial = value
				Me.SendPropertyChanged("serial")
				Me.OnserialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudTCM_G")>  _
Partial Public Class tbl_cloudTCM_G
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _source As String
	
	Private _diagnosis As String
	
	Private _days As System.Nullable(Of Byte)
	
	Private _chronic As String
	
	Private _SDATE As Date
	
	Private _EDATE As System.Nullable(Of Date)
	
	Private _serial As String
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OnsourceChanging(value As String)
    End Sub
    Partial Private Sub OnsourceChanged()
    End Sub
    Partial Private Sub OndiagnosisChanging(value As String)
    End Sub
    Partial Private Sub OndiagnosisChanged()
    End Sub
    Partial Private Sub OndaysChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub OndaysChanged()
    End Sub
    Partial Private Sub OnchronicChanging(value As String)
    End Sub
    Partial Private Sub OnchronicChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnEDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnEDATEChanged()
    End Sub
    Partial Private Sub OnserialChanging(value As String)
    End Sub
    Partial Private Sub OnserialChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_source", DbType:="NVarChar(10)")>  _
	Public Property source() As String
		Get
			Return Me._source
		End Get
		Set
			If (String.Equals(Me._source, value) = false) Then
				Me.OnsourceChanging(value)
				Me.SendPropertyChanging
				Me._source = value
				Me.SendPropertyChanged("source")
				Me.OnsourceChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_diagnosis", DbType:="NVarChar(50)")>  _
	Public Property diagnosis() As String
		Get
			Return Me._diagnosis
		End Get
		Set
			If (String.Equals(Me._diagnosis, value) = false) Then
				Me.OndiagnosisChanging(value)
				Me.SendPropertyChanging
				Me._diagnosis = value
				Me.SendPropertyChanged("diagnosis")
				Me.OndiagnosisChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_days", DbType:="TinyInt")>  _
	Public Property days() As System.Nullable(Of Byte)
		Get
			Return Me._days
		End Get
		Set
			If (Me._days.Equals(value) = false) Then
				Me.OndaysChanging(value)
				Me.SendPropertyChanging
				Me._days = value
				Me.SendPropertyChanged("days")
				Me.OndaysChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_chronic", DbType:="NVarChar(50)")>  _
	Public Property chronic() As String
		Get
			Return Me._chronic
		End Get
		Set
			If (String.Equals(Me._chronic, value) = false) Then
				Me.OnchronicChanging(value)
				Me.SendPropertyChanging
				Me._chronic = value
				Me.SendPropertyChanged("chronic")
				Me.OnchronicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EDATE", DbType:="Date")>  _
	Public Property EDATE() As System.Nullable(Of Date)
		Get
			Return Me._EDATE
		End Get
		Set
			If (Me._EDATE.Equals(value) = false) Then
				Me.OnEDATEChanging(value)
				Me.SendPropertyChanging
				Me._EDATE = value
				Me.SendPropertyChanged("EDATE")
				Me.OnEDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_serial", DbType:="NVarChar(4) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property serial() As String
		Get
			Return Me._serial
		End Get
		Set
			If (String.Equals(Me._serial, value) = false) Then
				Me.OnserialChanging(value)
				Me.SendPropertyChanging
				Me._serial = value
				Me.SendPropertyChanged("serial")
				Me.OnserialChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudSCH_U")>  _
Partial Public Class tbl_cloudSCH_U
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _drugname As String
	
	Private _SDATE As Date
	
	Private _STIME As String
	
	Private _clinic As String
	
	Private _t_dose As System.Nullable(Of Short)
	
	Private _t_DDD As System.Nullable(Of Short)
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub OndrugnameChanging(value As String)
    End Sub
    Partial Private Sub OndrugnameChanged()
    End Sub
    Partial Private Sub OnSDATEChanging(value As Date)
    End Sub
    Partial Private Sub OnSDATEChanged()
    End Sub
    Partial Private Sub OnSTIMEChanging(value As String)
    End Sub
    Partial Private Sub OnSTIMEChanged()
    End Sub
    Partial Private Sub OnclinicChanging(value As String)
    End Sub
    Partial Private Sub OnclinicChanged()
    End Sub
    Partial Private Sub Ont_doseChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Ont_doseChanged()
    End Sub
    Partial Private Sub Ont_DDDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Ont_DDDChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drugname", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property drugname() As String
		Get
			Return Me._drugname
		End Get
		Set
			If (String.Equals(Me._drugname, value) = false) Then
				Me.OndrugnameChanging(value)
				Me.SendPropertyChanging
				Me._drugname = value
				Me.SendPropertyChanged("drugname")
				Me.OndrugnameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SDATE", DbType:="Date NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SDATE() As Date
		Get
			Return Me._SDATE
		End Get
		Set
			If ((Me._SDATE = value)  _
						= false) Then
				Me.OnSDATEChanging(value)
				Me.SendPropertyChanging
				Me._SDATE = value
				Me.SendPropertyChanged("SDATE")
				Me.OnSDATEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_STIME", DbType:="Char(6) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property STIME() As String
		Get
			Return Me._STIME
		End Get
		Set
			If (String.Equals(Me._STIME, value) = false) Then
				Me.OnSTIMEChanging(value)
				Me.SendPropertyChanging
				Me._STIME = value
				Me.SendPropertyChanged("STIME")
				Me.OnSTIMEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clinic", DbType:="NVarChar(10)")>  _
	Public Property clinic() As String
		Get
			Return Me._clinic
		End Get
		Set
			If (String.Equals(Me._clinic, value) = false) Then
				Me.OnclinicChanging(value)
				Me.SendPropertyChanging
				Me._clinic = value
				Me.SendPropertyChanged("clinic")
				Me.OnclinicChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_dose", DbType:="SmallInt")>  _
	Public Property t_dose() As System.Nullable(Of Short)
		Get
			Return Me._t_dose
		End Get
		Set
			If (Me._t_dose.Equals(value) = false) Then
				Me.Ont_doseChanging(value)
				Me.SendPropertyChanging
				Me._t_dose = value
				Me.SendPropertyChanged("t_dose")
				Me.Ont_doseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_DDD", DbType:="SmallInt")>  _
	Public Property t_DDD() As System.Nullable(Of Short)
		Get
			Return Me._t_DDD
		End Get
		Set
			If (Me._t_DDD.Equals(value) = false) Then
				Me.Ont_DDDChanging(value)
				Me.SendPropertyChanging
				Me._t_DDD = value
				Me.SendPropertyChanged("t_DDD")
				Me.Ont_DDDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tbl_cloudSCH_R")>  _
Partial Public Class tbl_cloudSCH_R
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _uid As String
	
	Private _drug_name As String
	
	Private _YM As String
	
	Private _visit_n As System.Nullable(Of Byte)
	
	Private _clinic_n As System.Nullable(Of Byte)
	
	Private _t_dose As System.Nullable(Of Short)
	
	Private _t_DDD As System.Nullable(Of Short)
	
	Private _QDATE As System.Nullable(Of Date)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnuidChanging(value As String)
    End Sub
    Partial Private Sub OnuidChanged()
    End Sub
    Partial Private Sub Ondrug_nameChanging(value As String)
    End Sub
    Partial Private Sub Ondrug_nameChanged()
    End Sub
    Partial Private Sub OnYMChanging(value As String)
    End Sub
    Partial Private Sub OnYMChanged()
    End Sub
    Partial Private Sub Onvisit_nChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub Onvisit_nChanged()
    End Sub
    Partial Private Sub Onclinic_nChanging(value As System.Nullable(Of Byte))
    End Sub
    Partial Private Sub Onclinic_nChanged()
    End Sub
    Partial Private Sub Ont_doseChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Ont_doseChanged()
    End Sub
    Partial Private Sub Ont_DDDChanging(value As System.Nullable(Of Short))
    End Sub
    Partial Private Sub Ont_DDDChanged()
    End Sub
    Partial Private Sub OnQDATEChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnQDATEChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_uid", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property uid() As String
		Get
			Return Me._uid
		End Get
		Set
			If (String.Equals(Me._uid, value) = false) Then
				Me.OnuidChanging(value)
				Me.SendPropertyChanging
				Me._uid = value
				Me.SendPropertyChanged("uid")
				Me.OnuidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_drug_name", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property drug_name() As String
		Get
			Return Me._drug_name
		End Get
		Set
			If (String.Equals(Me._drug_name, value) = false) Then
				Me.Ondrug_nameChanging(value)
				Me.SendPropertyChanging
				Me._drug_name = value
				Me.SendPropertyChanged("drug_name")
				Me.Ondrug_nameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_YM", DbType:="NVarChar(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property YM() As String
		Get
			Return Me._YM
		End Get
		Set
			If (String.Equals(Me._YM, value) = false) Then
				Me.OnYMChanging(value)
				Me.SendPropertyChanging
				Me._YM = value
				Me.SendPropertyChanged("YM")
				Me.OnYMChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_visit_n", DbType:="TinyInt")>  _
	Public Property visit_n() As System.Nullable(Of Byte)
		Get
			Return Me._visit_n
		End Get
		Set
			If (Me._visit_n.Equals(value) = false) Then
				Me.Onvisit_nChanging(value)
				Me.SendPropertyChanging
				Me._visit_n = value
				Me.SendPropertyChanged("visit_n")
				Me.Onvisit_nChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_clinic_n", DbType:="TinyInt")>  _
	Public Property clinic_n() As System.Nullable(Of Byte)
		Get
			Return Me._clinic_n
		End Get
		Set
			If (Me._clinic_n.Equals(value) = false) Then
				Me.Onclinic_nChanging(value)
				Me.SendPropertyChanging
				Me._clinic_n = value
				Me.SendPropertyChanged("clinic_n")
				Me.Onclinic_nChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_dose", DbType:="SmallInt")>  _
	Public Property t_dose() As System.Nullable(Of Short)
		Get
			Return Me._t_dose
		End Get
		Set
			If (Me._t_dose.Equals(value) = false) Then
				Me.Ont_doseChanging(value)
				Me.SendPropertyChanging
				Me._t_dose = value
				Me.SendPropertyChanged("t_dose")
				Me.Ont_doseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_t_DDD", DbType:="SmallInt")>  _
	Public Property t_DDD() As System.Nullable(Of Short)
		Get
			Return Me._t_DDD
		End Get
		Set
			If (Me._t_DDD.Equals(value) = false) Then
				Me.Ont_DDDChanging(value)
				Me.SendPropertyChanging
				Me._t_DDD = value
				Me.SendPropertyChanged("t_DDD")
				Me.Ont_DDDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QDATE", DbType:="DateTime")>  _
	Public Property QDATE() As System.Nullable(Of Date)
		Get
			Return Me._QDATE
		End Get
		Set
			If (Me._QDATE.Equals(value) = false) Then
				Me.OnQDATEChanging(value)
				Me.SendPropertyChanging
				Me._QDATE = value
				Me.SendPropertyChanged("QDATE")
				Me.OnQDATEChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
